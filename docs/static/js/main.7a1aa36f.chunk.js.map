{"version":3,"sources":["components/08-useReducer/TodoReducer.js","components/08-useReducer/TodoAdd.js","hooks/useForm.js","components/08-useReducer/TodoListItem.js","components/08-useReducer/TodoList.js","components/08-useReducer/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoAdd","handleAddNewTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","desc","className","placeholder","onChange","autoComplete","TodoListItem","index","handleToggle","handleDelete","onClick","TodoList","todos","idx","TodoApp","useReducer","JSON","parse","localStorage","getItem","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a1aa36f.chunk.js","sourcesContent":["export const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n\r\n        case 'delete':\r\n            return state.filter(todo => todo.id !== action.payload);\r\n\r\n        case 'toggle':\r\n            return state.map(todo => ( todo.id === action.payload ) ? { ...todo, done: !todo.done } : todo );\r\n\r\n        case 'toggle-old':\r\n            return state.map((todo) => {\r\n                if (todo.id === action.payload) {\r\n                    return {\r\n                        ...todo,\r\n                        done: !todo.done\r\n                    };\r\n                } else {\r\n                    return todo;\r\n                }\r\n            });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\nexport const TodoAdd = ({ handleAddNewTodo }) => {\r\n\r\n    const [{ description }, handleInputChange, reset] = useForm({\r\n        description: ''\r\n    });\r\n\r\n    const handleSubmit = function (e) {\r\n        e.preventDefault();\r\n\r\n        if (description.trim().length <= 1) {\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        };\r\n\r\n        handleAddNewTodo(newTodo);\r\n\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h4>Agregar TODO</h4>\r\n            <hr />\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Hacer...\"\r\n                    onChange={handleInputChange}\r\n                    value={description}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <div className=\"d-grid\">\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary mt-2\"\r\n                    >\r\n                        Agregar\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = function () {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = function ({ target }) {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n    \r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const TodoListItem = ({ todo, index, handleToggle, handleDelete }) => {\r\n    return (\r\n        <li\r\n            className=\"list-group-item\"\r\n        >\r\n            <div className=\"d-flex align-items-center justify-content-between\">\r\n                <span\r\n                    onClick={() => handleToggle(todo.id)}\r\n                    className={todo.done ? \"pointer text-decoration-line-through\" : \"pointer\"}\r\n                >\r\n                    {index + 1}. {todo.desc}\r\n                </span>\r\n                <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDelete(todo.id)}\r\n                >\r\n                    borrar\r\n                </button>\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoListItem.propTypes = {\r\n    todo: PropTypes.object.isRequired,\r\n    index: PropTypes.number.isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { TodoListItem } from './TodoListItem';\r\n\r\nexport const TodoList = ({ todos, handleToggle, handleDelete }) => {\r\n    return (\r\n        <ul className=\"list-group list-group-flush\">\r\n            {\r\n                todos.map((todo, idx) => {\r\n                    return (\r\n                        <TodoListItem\r\n                            key={todo.id}\r\n                            todo={todo}\r\n                            index={idx}\r\n                            handleToggle={handleToggle}\r\n                            handleDelete={handleDelete}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.array.isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './TodoReducer';\r\nimport { TodoAdd } from './TodoAdd';\r\nimport { TodoList } from './TodoList';\r\nimport './TodoApp.css';\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const init = function () {\r\n        return JSON.parse(localStorage.getItem('todos')) || [];\r\n    }\r\n\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const handleDelete = function (todoId) {\r\n\r\n        const action = {\r\n            type: 'delete',\r\n            payload: todoId\r\n        }\r\n\r\n        dispatch(action);\r\n\r\n    }\r\n\r\n    const handleToggle = function (todoId) {\r\n        const action = {\r\n            type: 'toggle',\r\n            payload: todoId\r\n        }\r\n        dispatch(action);\r\n    }\r\n\r\n    const handleAddNewTodo = function (newTodo) {\r\n        const action = {\r\n            type: 'add',\r\n            payload: newTodo\r\n        };\r\n        dispatch(action);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>TodoApp ({todos.length})</h1>\r\n            <hr />\r\n            <div className=\"row\">\r\n                <div className=\"col-7\">\r\n                    <TodoList\r\n                        todos={todos}\r\n                        handleToggle={handleToggle}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                </div>\r\n                <div className=\"col-5\">\r\n                    <TodoAdd handleAddNewTodo={handleAddNewTodo} />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { HookApp } from './HookApp';\n// import { CounterApp } from './components/01-useState/CounterApp';\n// import { CounterWithCustomHook } from './components/01-useState/CounterWithCustomHook';\n// import { SimpleForm } from './components/02-useEffect/SimpleForm';\n// import { FormWithCustomHook } from './components/02-useEffect/FormWithCustomHook';\n// import { MultipleCustomHooks } from './components/03-examples/MultipleCustomHooks';\n// import { FocusScreen } from './components/04-useRef/FocusScreen';\n// import { RealExampleRef } from './components/04-useRef/RealExampleRef';\n// import { Layout } from './components/05-useLayoutEffect/Layout';\n// import { Memorize } from './components/06-useMemo/Memorize';\n// import { MemoHook } from './components/06-useMemo/MemoHook';\n// import { CallbackHook } from './components/useMemo/CallbackHook';\n// import { Padre } from './components/07-tarea-memo/Padre';\nimport { TodoApp } from './components/08-useReducer/TodoApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// import './components/08-useReducer/IntroReducer';\n"],"sourceRoot":""}